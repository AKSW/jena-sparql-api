<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>rdf-mapper-benchmark-impl-alibaba</artifactId>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.aksw.jena-sparql-api</groupId>
		<artifactId>rdf-mapper-benchmark-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<dependencies>


		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>4.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
			<version>4.1.0</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.ow2.asm</groupId> -->
		<!-- <artifactId>asm-tree</artifactId> -->
		<!-- <version>5.2</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>5.2</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>asm</groupId> -->
		<!-- <artifactId>asm-all</artifactId> -->
		<!-- <version>3.3.1</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.commons.iterator</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.komma.rdf4j</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.komma.core</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.composition</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.composition.properties</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.composition.properties.komma</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.composition.cache</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.komma.literals</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.komma.em</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.komma.dm</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>



		<dependency>
			<groupId>net.enilink.komma</groupId>
			<artifactId>net.enilink.vocab.rdfs</artifactId>
			<version>1.3.3-SNAPSHOT</version>
		</dependency>


		<dependency>
			<groupId>org.openrdf.alibaba</groupId>
			<artifactId>alibaba-repository-object</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-sail-memory</artifactId>
			<version>2.8.8</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-repository-manager</artifactId>
			<version>2.8.8</version>
		</dependency>

		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-repository-manager</artifactId>
			<version>2.8.8</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-repository-manager</artifactId>
			<version>2.2</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-repository-sail</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.osgi</groupId> -->
		<!-- <artifactId>org.osgi.core</artifactId> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.aksw.sparqlqc</groupId> -->
		<!-- <artifactId>sparqlqc-api-simple</artifactId> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.aksw.sparqlqc</groupId> -->
		<!-- <artifactId>sparqlqc-api</artifactId> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.aksw.sparqlqc</groupId> -->
		<!-- <artifactId>sparqlqc-impl-fragment</artifactId> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.aksw.jena-sparql-api</groupId> -->
		<!-- <artifactId>jena-sparql-api-cache</artifactId> -->
		<!-- <version>${jsa.version}</version> -->
		<!-- <exclusions> -->
		<!-- <exclusion> -->
		<!-- <groupId>org.slf4j</groupId> -->
		<!-- <artifactId>slf4j-ext</artifactId> -->
		<!-- </exclusion> -->
		<!-- </exclusions> -->
		<!-- </dependency> -->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>3.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>
						<Bundle-Activator>org.aksw.qcwrapper.jsa.Activator</Bundle-Activator>
						<!-- <Import-Package>*;resolution:=optional,org.osgi.framework</Import-Package> -->


						<!-- There are these options for using the application's org.osgi.framework 
							import -->
						<!-- (1) Declare no static imports at all try to import everything 
							dynamically: -->
						<!-- <Import-Package>;</Import-Package> -->
						<!-- <DynamicImport-Package>*</DynamicImport-Package> -->
						<!-- (2) Declare all static dependencies as optional -->
						<Import-Package>*;resolution:=optional</Import-Package>
						<!-- <Import-Package></Import-Package> -->
						<!-- (3) Ideally, packages only originating from provided maven dependencies 
							would be mandatory, but I don't see any way to do that, oh well... -->

					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
